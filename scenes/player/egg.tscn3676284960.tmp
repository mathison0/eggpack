[gd_scene load_steps=4 format=3 uid="uid://h17puraebncd"]

[ext_resource type="Texture2D" uid="uid://cii47wtsuo8q1" path="res://assets/graphics/egg_img.png" id="1_60cwx"]

[sub_resource type="GDScript" id="GDScript_cndv8"]
script/source = "extends RigidBody2D

# 중력의 세기 (픽셀/초^2)
# 프로젝트 설정 -> Physics -> 2D -> Default Gravity (Vector)의 Y 값과 일치시키는 것이 일반적입니다.
@export var gravity: float = 980.0 

# 이동 속도 (수평 이동이 필요하다면 추가)
@export var speed: float = 200.0

func _physics_process(delta: float):
	# 1. 중력 적용:
	# 캐릭터가 바닥에 닿아있지 않으면 (점프 중이거나 공중에 있을 때) 중력을 적용합니다.
	# is_on_floor()는 CharacterBody2D에 내장된 함수로, 바닥에 닿아있는지 확인합니다.
	if not is_on_floor():
		velocity.y += gravity * delta

	# 2. (선택 사항) 수평 이동 예시:
	# 왼쪽으로 이동(-1), 오른쪽으로 이동(1) (예시이므로 실제 입력은 Input.get_vector() 등으로 처리)
	# var direction_x = 0
	# if Input.is_action_pressed(\"move_left\"):
	#    direction_x = -1
	# elif Input.is_action_pressed(\"move_right\"):
	#    direction_x = 1
	# velocity.x = direction_x * speed

	# 3. 실제 이동 및 충돌 처리:
	# CharacterBody2D의 velocity 값을 기반으로 이동하고 충돌 시 슬라이드합니다.
	move_and_slide()

	# (디버깅용) 현재 속도 출력
	# print(\"Current velocity: \", velocity)
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_6upkn"]
radius = 376.0
height = 866.0

[node name="egg" type="RigidBody2D"]
script = SubResource("GDScript_cndv8")
gravity = null
speed = null

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_60cwx")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -20)
shape = SubResource("CapsuleShape2D_6upkn")
one_way_collision_margin = 0.0
